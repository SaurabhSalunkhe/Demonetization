/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.EmployeeRole;

import Business.Enterprise.Enterprise;
import Business.Organization.EmployeeOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.TokenTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.CustomerRole.CustomerWorkAreaJPanel;

/**
 *
 * @author raunak
 */
public class EmployeeWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EmployeeOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    TokenTestWorkRequest tokenTestWorkRequest;
    public SimpleDateFormat simpleDateFormat;

    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public EmployeeWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, EmployeeOrganization employeeOrganization, Enterprise enterprise) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.organization = employeeOrganization;
        this.enterprise = enterprise;
        this.userAccount = account;
        jLabelEnterpriseName.setText(enterprise.getName());
        simpleDateFormat = new SimpleDateFormat("MM/DD/YY");
        populateCombo();

    }

    public int getSum() {
        int rowsCount = workRequestJTable.getRowCount();
        int sum = 0;
        for (int i = 0; i < rowsCount; i++) {
            sum = sum + Integer.parseInt(workRequestJTable.getValueAt(i, 3).toString());

        }
        return sum;
    }

    public void populateCombo() {
        for (WorkRequest.TimeSlot timeSlot : WorkRequest.TimeSlot.values()) {
            jComboBoxTimeslot.addItem(timeSlot);
        }
    }

    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        Date input = jCalendarComboBox.getDate();
        LocalDate selectedDate = input.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

        WorkRequest.TimeSlot timeSlot = (WorkRequest.TimeSlot) jComboBoxTimeslot.getSelectedItem();
        if (selectedDate == null || timeSlot == null) {
            JOptionPane.showMessageDialog(null, "Please select date and tmeslot.", "No selection detected", JOptionPane.ERROR_MESSAGE);
        } else {
            model.setRowCount(0);

            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (organization instanceof EmployeeOrganization) {
                    for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()) {
                        System.out.println(request.getRequestDate());
                        System.out.println(selectedDate);

                        if (request.getRequestDate().equals(selectedDate) && request.getTimeSlot() == timeSlot) {
                            System.out.println(request.getRequestDate());
                            TokenTestWorkRequest tTestWorkRequest = (TokenTestWorkRequest) request;
                            if (tTestWorkRequest.getStatus().equalsIgnoreCase("completed")) {
                            } else {

                                Object[] row = new Object[3];
                                row[0] = request;

                                if (tTestWorkRequest.isDeposit()) {
                                    row[1] = "Deposit";
                                } else {
                                    row[1] = "Exchange";
                                }

                                row[2] = tTestWorkRequest.getAmount();
                                model.addRow(row);
                            }
                        }
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        requestTestJButton = new javax.swing.JButton();
        refreshTestJButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        jLabelEnterpriseName = new javax.swing.JLabel();
        jComboBoxTimeslot = new javax.swing.JComboBox();
        jLabelTimeSlot = new javax.swing.JLabel();
        jCalendarComboBox = new de.wannawork.jcalendar.JCalendarComboBox();

        setBackground(new java.awt.Color(255, 255, 255));

        workRequestJTable.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Customer", "Transaction type", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(2).setResizable(false);
        }

        requestTestJButton.setBackground(new java.awt.Color(255, 255, 255));
        requestTestJButton.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        requestTestJButton.setText("Assign request");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });

        refreshTestJButton.setBackground(new java.awt.Color(255, 255, 255));
        refreshTestJButton.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        refreshTestJButton.setText("Refresh");
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });

        enterpriseLabel.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        enterpriseLabel.setText("EnterPrise :");

        jLabelEnterpriseName.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabelEnterpriseName.setText("<value>");

        jComboBoxTimeslot.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jComboBoxTimeslot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTimeslotActionPerformed(evt);
            }
        });

        jLabelTimeSlot.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabelTimeSlot.setText("<get selected time slot>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(565, 565, 565)
                .addComponent(requestTestJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(358, 358, 358)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(refreshTestJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(478, 478, 478))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jComboBoxTimeslot, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jLabelTimeSlot, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelEnterpriseName, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1))
                        .addGap(339, 339, 339))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(474, 474, 474)
                .addComponent(jCalendarComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(432, 432, 432))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEnterpriseName, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(115, 115, 115)
                .addComponent(jCalendarComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTimeSlot, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxTimeslot, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE))
                .addGap(36, 36, 36)
                .addComponent(refreshTestJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(requestTestJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed
        int selectedRow = workRequestJTable.getSelectedRow();
        
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select date and tmeslot.", "No selection detected", JOptionPane.ERROR_MESSAGE);
        }
        else{
            tokenTestWorkRequest = (TokenTestWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);

            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            userProcessContainer.add("RequestLabTestJPanel", new ProcessRequestJPanel(userProcessContainer, userAccount, enterprise, tokenTestWorkRequest));
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_requestTestJButtonActionPerformed

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed
        populateRequestTable();
    }//GEN-LAST:event_refreshTestJButtonActionPerformed

    private void jComboBoxTimeslotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTimeslotActionPerformed
        // TODO add your handling code here:
        jLabelTimeSlot.setText(jComboBoxTimeslot.getSelectedItem().toString());
    }//GEN-LAST:event_jComboBoxTimeslotActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel enterpriseLabel;
    private de.wannawork.jcalendar.JCalendarComboBox jCalendarComboBox;
    private javax.swing.JComboBox jComboBoxTimeslot;
    private javax.swing.JLabel jLabelEnterpriseName;
    private javax.swing.JLabel jLabelTimeSlot;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
