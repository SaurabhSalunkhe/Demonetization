/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.EcoSystem;
import Business.Enterprise.BankEnterprise;
import Business.Organization.CustomerOrganization;
import Business.Organization.EmployeeOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.Denomination;
import Business.WorkQueue.Denomination.CurrencyType;
import Business.WorkQueue.TokenTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author raunak
 */
public class ProcessWorkRequestJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    TokenTestWorkRequest tokenTestWorkRequest;
    Denomination denomination;
    UserAccount userAccount;
    CustomerOrganization customerOrganization;
    EcoSystem business;
    BankEnterprise bankEnterprise;

    ProcessWorkRequestJPanel(JPanel userProcessContainer, UserAccount userAccount, CustomerOrganization customerOrganization, EcoSystem business, TokenTestWorkRequest tokenTestWorkRequest, BankEnterprise bankEnterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.tokenTestWorkRequest = tokenTestWorkRequest;
        this.jLabelDate.setText(tokenTestWorkRequest.getRequestDate().toString());
        this.jLabelTimeSlot.setText(tokenTestWorkRequest.getTimeSlot().getValue());
        this.userAccount = userAccount;
        this.customerOrganization = customerOrganization;
        denomination = new Denomination();
        this.business = business;
        this.bankEnterprise = bankEnterprise;
        if (tokenTestWorkRequest.isDeposit()) {
            this.jLabelType.setText("Deposit");
        } else {
            this.jLabelType.setText("Exchange");
        }
        populateCombo();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        transactiontype = new javax.swing.ButtonGroup();
        btnSubmit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        jLabelType = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabelDate = new javax.swing.JLabel();
        jLabelTimeSlot = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnadd = new javax.swing.JButton();
        currencySelectComboBox = new javax.swing.JComboBox<>();
        txtNumberOfNotes = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTotal500 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTotal1000 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 153, 0));

        btnSubmit.setFont(new java.awt.Font("Mangal", 1, 14)); // NOI18N
        btnSubmit.setText("Finish");
        btnSubmit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Mangal", 1, 18)); // NOI18N
        jLabel1.setText("Amount");

        txtAmount.setEnabled(false);

        backJButton.setFont(new java.awt.Font("Mangal", 1, 14)); // NOI18N
        backJButton.setText("<<Back");
        backJButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabelType.setFont(new java.awt.Font("Mangal", 3, 18)); // NOI18N
        jLabelType.setText("<value from radiobutton>");

        jLabel3.setFont(new java.awt.Font("Mangal", 1, 14)); // NOI18N
        jLabel3.setText("Selected date      :");

        jLabel4.setFont(new java.awt.Font("Mangal", 1, 14)); // NOI18N
        jLabel4.setText("Selected Time slot :");

        jLabelDate.setFont(new java.awt.Font("Mangal", 0, 12)); // NOI18N
        jLabelDate.setText("jLabel5");

        jLabelTimeSlot.setFont(new java.awt.Font("Mangal", 0, 12)); // NOI18N
        jLabelTimeSlot.setText("jLabel6");

        jLabel2.setFont(new java.awt.Font("Mangal", 2, 8)); // NOI18N
        jLabel2.setText("(ammount less than 10000)");

        btnadd.setText("add");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        currencySelectComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "500", "1000" }));

        txtNumberOfNotes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumberOfNotesActionPerformed(evt);
            }
        });

        jLabel5.setText("Total money using 500 Rupees Notes :");

        txtTotal500.setText("0");
        txtTotal500.setEnabled(false);
        txtTotal500.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotal500ActionPerformed(evt);
            }
        });

        jLabel6.setText("Total money using 1000 Rupees Notes :");

        txtTotal1000.setText("0");
        txtTotal1000.setEnabled(false);

        jLabel7.setText("Number of Notes");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTotal1000, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(currencySelectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtNumberOfNotes, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtTotal500, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelType)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabelDate, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabelTimeSlot, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(537, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelType)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabelDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabelTimeSlot))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currencySelectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumberOfNotes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTotal500, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6)
                            .addComponent(txtTotal1000, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSubmit)))
                .addGap(1, 1, 1)
                .addComponent(btnadd)
                .addGap(102, 102, 102)
                .addComponent(backJButton)
                .addContainerGap(126, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CustomerWorkAreaJPanel dwjp = (CustomerWorkAreaJPanel) component;
        dwjp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void populateCombo() {
        currencySelectComboBox.removeAllItems();
        for (CurrencyType currencyType : Denomination.CurrencyType.values()) {
            currencySelectComboBox.addItem(currencyType.getValue());
        }
    }

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed

        if(txtTotal1000.getText().equals("")||txtTotal500.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Please enter types of notes");
                return;
            }
        
        try {
            int amount = Integer.parseInt(txtAmount.getText());
            if (amount > 0 && amount < 10000) {
                tokenTestWorkRequest.setAmount(amount);
                tokenTestWorkRequest.setSender(userAccount);
                int numberFiveHundredNote = (Integer.parseInt(txtTotal500.getText()) / 500);
                int numberThousandNote = (Integer.parseInt(txtTotal1000.getText()) / 1000);

                tokenTestWorkRequest.setFiveHunderdNotes(numberFiveHundredNote);
                tokenTestWorkRequest.setThousandNotes(numberThousandNote);

            } else if (amount > 10000 && !tokenTestWorkRequest.isDeposit()) {
                JOptionPane.showMessageDialog(this, "Exchange not allowed over 10000. Please attempt a deposit.");
                return;
            } else {
                JOptionPane.showMessageDialog(this, "Please enter amount greater than 0.");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter proper amount");
            return;
        }

        for (Organization organization : this.bankEnterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization instanceof EmployeeOrganization) {
                organization.getWorkQueue().getWorkRequestList().add((WorkRequest) tokenTestWorkRequest);
                tokenTestWorkRequest.setStatus("Sent");
                JOptionPane.showMessageDialog(this, "Your Request is recorded succesfully with " + bankEnterprise.getName() + " for " + tokenTestWorkRequest.getRequestDate() + " at " + tokenTestWorkRequest.getTimeSlot() + ".");
            }
        }


    }//GEN-LAST:event_btnSubmitActionPerformed

    private void txtNumberOfNotesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumberOfNotesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumberOfNotesActionPerformed

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        // TODO add your handling code here:
        int totalAmount500 = 0;
        int totalAmount1000 = 0;
        int a = 0, b = 0;
        int numberOfNotes;

        numberOfNotes = Integer.parseInt(txtNumberOfNotes.getText());
        if (Integer.parseInt(currencySelectComboBox.getSelectedItem().toString()) == 500) {
            totalAmount500 = 500 * numberOfNotes;
            txtTotal500.setText(String.valueOf(totalAmount500));
        }
        if (Integer.parseInt(currencySelectComboBox.getSelectedItem().toString()) == 1000) {
            totalAmount1000 = 1000 * numberOfNotes;
            txtTotal1000.setText(String.valueOf(totalAmount1000));
        }
        try {
            a = Integer.parseInt(txtTotal500.getText());
        } catch (NumberFormatException e) {
            a = 0;
        }

        try {
            b = Integer.parseInt(txtTotal1000.getText());
        } catch (NumberFormatException e) {
            b = 0;
        }

        int total = a + b;
        txtAmount.setText(String.valueOf(total));

    }//GEN-LAST:event_btnaddActionPerformed

    private void txtTotal500ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotal500ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotal500ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnadd;
    private javax.swing.JComboBox<String> currencySelectComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelDate;
    private javax.swing.JLabel jLabelTimeSlot;
    private javax.swing.JLabel jLabelType;
    private javax.swing.ButtonGroup transactiontype;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtNumberOfNotes;
    private javax.swing.JTextField txtTotal1000;
    private javax.swing.JTextField txtTotal500;
    // End of variables declaration//GEN-END:variables
}
